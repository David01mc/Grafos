// static/js/system-recovery.js
// Sistema de recuperaci√≥n autom√°tica del sistema

console.log('üõ†Ô∏è Cargando sistema de recuperaci√≥n autom√°tica...');

// Variables de estado del sistema
let sistemaConfigurado = false;
let intentosRecuperacion = 0;
const maxIntentosRecuperacion = 3;

// Funci√≥n para detectar si el sistema necesita recuperaci√≥n
function detectarNecesidadRecuperacion() {
    const problemas = [];
    
    // Verificar componentes b√°sicos
    if (typeof network === 'undefined' || !network) {
        problemas.push('Network no disponible');
    }
    
    if (typeof nodes === 'undefined' || !nodes) {
        problemas.push('Nodes no disponible');
    }
    
    // Verificar funcionalidades adicionales
    if (typeof configurarDobleClickCrearNodo !== 'function') {
        problemas.push('Funcionalidad de doble clic no configurada');
    }
    
    if (typeof configurarHoverCrearAristas !== 'function') {
        problemas.push('Funcionalidad de hover no configurada');
    }
    
    // Verificar sistema de burbujas
    if (typeof crearBurbujasGrupos !== 'function') {
        problemas.push('Sistema de burbujas no disponible');
    }
    
    // Verificar si hay burbujas cuando deber√≠a haberlas
    if (typeof burbujasActivas !== 'undefined' && burbujasActivas && nodes && nodes.length > 0) {
        const nodosConGrupos = nodes.get().filter(nodo => nodo.grupo && nodo.grupo !== 'sin_grupo');
        if (nodosConGrupos.length > 0) {
            const container = document.getElementById('network');
            const svg = container?.querySelector('.burbujas-svg');
            const burbujas = svg?.querySelectorAll('.burbuja-grupo');
            
            if (!burbujas || burbujas.length === 0) {
                problemas.push('Burbujas no visibles cuando deber√≠an estarlo');
            }
        }
    }
    
    return problemas;
}

// Funci√≥n para recuperar funcionalidades perdidas
async function recuperarSistema() {
    if (intentosRecuperacion >= maxIntentosRecuperacion) {
        console.warn('‚ö†Ô∏è M√°ximo de intentos de recuperaci√≥n alcanzado');
        return false;
    }
    
    intentosRecuperacion++;
    console.log(`üîß Intento de recuperaci√≥n ${intentosRecuperacion}/${maxIntentosRecuperacion}...`);
    
    try {
        // 1. Verificar y configurar funcionalidades b√°sicas
        if (network && typeof configurarDobleClickCrearNodo === 'function') {
            configurarDobleClickCrearNodo();
            console.log('‚úÖ Doble clic reconfigurado');
        }
        
        if (network && typeof configurarHoverCrearAristas === 'function') {
            configurarHoverCrearAristas();
            console.log('‚úÖ Hover para aristas reconfigurado');
        }
        
        // 2. Recuperar sistema de burbujas si es necesario
        if (nodes && nodes.length > 0) {
            const nodosConGrupos = nodes.get().filter(nodo => nodo.grupo && nodo.grupo !== 'sin_grupo');
            
            if (nodosConGrupos.length > 0) {
                console.log(`ü´ß Recuperando burbujas para ${nodosConGrupos.length} nodos con grupos...`);
                
                // Activar burbujas
                if (typeof burbujasActivas !== 'undefined') {
                    window.burbujasActivas = true;
                }
                
                // Crear burbujas
                if (typeof crearBurbujasGrupos === 'function') {
                    crearBurbujasGrupos();
                    console.log('‚úÖ Burbujas recuperadas');
                    
                    // Configurar eventos de burbujas
                    setTimeout(() => {
                        if (typeof configurarEventosBurbujas === 'function') {
                            configurarEventosBurbujas();
                            console.log('‚úÖ Eventos de burbujas reconfigurados');
                        }
                    }, 300);
                }
            }
        }
        
        console.log('üéâ Recuperaci√≥n del sistema completada');
        sistemaConfigurado = true;
        return true;
        
    } catch (error) {
        console.error('‚ùå Error durante recuperaci√≥n:', error);
        return false;
    }
}

// Funci√≥n para monitorear el estado del sistema
function iniciarMonitoreoRecuperacion() {
    let verificacionesConsecutivasBuenas = 0;
    
    const intervaloMonitoreo = setInterval(() => {
        // Si ya est√° configurado, verificaciones menos frecuentes
        if (sistemaConfigurado) {
            verificacionesConsecutivasBuenas++;
            
            // Despu√©s de 10 verificaciones buenas (30 segundos), reducir frecuencia
            if (verificacionesConsecutivasBuenas >= 10) {
                // Verificaci√≥n cada 15 segundos en lugar de cada 3
                if (verificacionesConsecutivasBuenas % 5 !== 0) {
                    return;
                }
            }
            
            const problemas = detectarNecesidadRecuperacion();
            if (problemas.length > 0) {
                console.log('‚ö†Ô∏è Detectados problemas, intentando recuperaci√≥n:', problemas);
                sistemaConfigurado = false;
                verificacionesConsecutivasBuenas = 0;
                setTimeout(recuperarSistema, 1000);
            }
            return;
        }
        
        // Verificaci√≥n completa si no est√° configurado
        const problemas = detectarNecesidadRecuperacion();
        
        if (problemas.length > 0) {
            setTimeout(recuperarSistema, 1000);
        } else {
            sistemaConfigurado = true;
            verificacionesConsecutivasBuenas = 0;
            console.log('‚úÖ Sistema verificado como funcionando correctamente');
        }
        
    }, 3000); // Verificar cada 3 segundos
    
    // Detener monitoreo despu√©s de 3 minutos si todo est√° estable
    setTimeout(() => {
        if (sistemaConfigurado && verificacionesConsecutivasBuenas >= 15) {
            clearInterval(intervaloMonitoreo);
            console.log('‚úÖ Monitoreo detenido - sistema estable por 3 minutos');
        }
    }, 180000); // 3 minutos
}

// Funci√≥n para diagn√≥stico completo
window.diagnosticoCompletoSistema = function() {
    console.log('üîç DIAGN√ìSTICO COMPLETO DEL SISTEMA:');
    console.log('====================================');
    
    // Estado b√°sico
    console.log('üìä Estado b√°sico:');
    console.log('- Sistema configurado:', sistemaConfigurado ? '‚úÖ' : '‚ùå');
    console.log('- Intentos recuperaci√≥n:', intentosRecuperacion);
    console.log('- Network disponible:', typeof network !== 'undefined' && network ? '‚úÖ' : '‚ùå');
    console.log('- Nodes disponible:', typeof nodes !== 'undefined' && nodes ? `‚úÖ (${nodes.length})` : '‚ùå');
    console.log('- Edges disponible:', typeof edges !== 'undefined' && edges ? `‚úÖ (${edges.length})` : '‚ùå');
    
    // Funcionalidades
    console.log('\nüõ†Ô∏è Funcionalidades:');
    console.log('- Doble clic crear nodos:', typeof configurarDobleClickCrearNodo === 'function' ? '‚úÖ' : '‚ùå');
    console.log('- Hover crear aristas:', typeof configurarHoverCrearAristas === 'function' ? '‚úÖ' : '‚ùå');
    console.log('- Sistema burbujas:', typeof crearBurbujasGrupos === 'function' ? '‚úÖ' : '‚ùå');
    console.log('- Gesti√≥n grupos:', typeof abrirModalGestionGrupos === 'function' ? '‚úÖ' : '‚ùå');
    console.log('- Persistencia grupos:', typeof sincronizarGruposAlCargar === 'function' ? '‚úÖ' : '‚ùå');
    
    // Estado de burbujas
    console.log('\nü´ß Sistema de burbujas:');
    if (typeof burbujasActivas !== 'undefined') {
        console.log('- Burbujas activas:', burbujasActivas ? '‚úÖ' : '‚ùå');
        
        if (burbujasActivas) {
            const container = document.getElementById('network');
            const svg = container?.querySelector('.burbujas-svg');
            const burbujas = svg?.querySelectorAll('.burbuja-grupo');
            
            console.log('- SVG presente:', svg ? '‚úÖ' : '‚ùå');
            console.log('- Burbujas en DOM:', burbujas ? `‚úÖ (${burbujas.length})` : '‚ùå');
        }
    } else {
        console.log('- Estado burbujas: ‚ùå No definido');
    }
    
    // Problemas detectados
    const problemas = detectarNecesidadRecuperacion();
    console.log('\n‚ö†Ô∏è Problemas detectados:');
    if (problemas.length === 0) {
        console.log('‚úÖ Ning√∫n problema detectado');
    } else {
        problemas.forEach((problema, index) => {
            console.log(`${index + 1}. ${problema}`);
        });
        
        console.log('\nüîß Ejecutando recuperaci√≥n autom√°tica...');
        setTimeout(recuperarSistema, 500);
    }
    
    console.log('\nüí° Funciones disponibles:');
    console.log('- recuperarSistemaManual() - Forzar recuperaci√≥n');
    console.log('- testBurbujasPostRecarga() - Test de burbujas');
    console.log('- verificarEstadoSistema() - Estado b√°sico');
    console.log('====================================');
    
    return problemas.length === 0;
};

// Funci√≥n para recuperaci√≥n manual
window.recuperarSistemaManual = async function() {
    console.log('üîß Iniciando recuperaci√≥n manual...');
    intentosRecuperacion = 0;
    sistemaConfigurado = false;
    
    const exito = await recuperarSistema();
    
    if (exito && typeof mostrarNotificacion === 'function') {
        mostrarNotificacion('success', 'Sistema recuperado exitosamente');
    } else if (typeof mostrarNotificacion === 'function') {
        mostrarNotificacion('error', 'Error en la recuperaci√≥n del sistema');
    }
    
    return exito;
};

// Funci√≥n espec√≠fica para test de burbujas
window.testBurbujasPostRecarga = function() {
    console.log('üß™ Test de burbujas post-recarga...');
    
    if (!nodes || nodes.length === 0) {
        console.log('‚ùå No hay nodos para probar');
        if (typeof mostrarNotificacion === 'function') {
            mostrarNotificacion('info', 'No hay nodos disponibles para probar burbujas');
        }
        return false;
    }
    
    const nodosConGrupos = nodes.get().filter(nodo => nodo.grupo && nodo.grupo !== 'sin_grupo');
    
    if (nodosConGrupos.length === 0) {
        console.log('üìù No hay grupos asignados, creando grupos demo...');
        if (typeof crearGruposDemo === 'function') {
            crearGruposDemo();
            if (typeof mostrarNotificacion === 'function') {
                mostrarNotificacion('info', 'Grupos demo creados. Las burbujas aparecer√°n autom√°ticamente.');
            }
            return true;
        } else {
            if (typeof mostrarNotificacion === 'function') {
                mostrarNotificacion('error', 'No se pueden crear grupos de demostraci√≥n');
            }
            return false;
        }
    }
    
    // Verificar estado de burbujas
    const container = document.getElementById('network');
    const svg = container?.querySelector('.burbujas-svg');
    const burbujas = svg?.querySelectorAll('.burbuja-grupo');
    
    console.log(`ü´ß ${nodosConGrupos.length} nodos con grupos, ${burbujas?.length || 0} burbujas visibles`);
    
    if (!burbujas || burbujas.length === 0) {
        console.log('üîß Recreando burbujas...');
        if (typeof crearBurbujasGrupos === 'function') {
            window.burbujasActivas = true;
            crearBurbujasGrupos();
            if (typeof mostrarNotificacion === 'function') {
                mostrarNotificacion('success', 'Burbujas recreadas exitosamente');
            }
        }
    } else {
        console.log('‚úÖ Burbujas ya est√°n visibles');
        if (typeof mostrarNotificacion === 'function') {
            mostrarNotificacion('success', 'Las burbujas est√°n funcionando correctamente');
        }
    }
    
    return true;
};

// Inicializar monitoreo despu√©s de que todo est√© cargado
setTimeout(() => {
    if (typeof network !== 'undefined' && typeof nodes !== 'undefined') {
        console.log('üõ†Ô∏è Iniciando sistema de recuperaci√≥n autom√°tica...');
        iniciarMonitoreoRecuperacion();
    }
}, 5000); // Esperar 5 segundos para que todo se cargue

console.log('üõ†Ô∏è Sistema de recuperaci√≥n autom√°tica cargado');